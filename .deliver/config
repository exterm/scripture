#!/usr/bin/env bash

APP="scripture" # name of your release

BUILD_HOST="hullubullu.de" # host where to build the release
BUILD_USER="scripture" # local user at build host
BUILD_AT="/tmp/scripture/builds" # build directory on build host

# STAGING_HOSTS="test2.acme.org" # staging / test hosts separated by space
# STAGING_USER="test" # local user at staging hosts
# TEST_AT="/test/my-erlang-app" # deploy directory on staging hosts. default is DELIVER_TO

PRODUCTION_HOSTS="hullubullu.de" # deploy / production hosts separated by space
PRODUCTION_USER="scripture" # local user at deploy hosts
DELIVER_TO="/opt/scripture" # deploy directory on production hosts

pre_erlang_get_and_update_deps() {
  __remote "
    set -e
    [ -f ~/.profile ] && source ~/.profile
    cd $BUILD_AT $SILENCE
    ln -s /home/scripture/prod.secret.exs config/prod.secret.exs
  "
}

pre_erlang_clean_compile() {
  status "Running phoenix.digest" # log output prepended with "----->"
  __sync_remote " # runs the commands on the build host
    [ -f ~/.profile ] && source ~/.profile # load profile (optional)
    set -e # fail if any command fails (recommended)
    cd '$BUILD_AT' # enter the build directory on the build host (required)
    # prepare something
    mkdir -p priv/static # required by the phoenix.digest task
    # run your custom task
    npm install
    node node_modules/brunch/bin/brunch build
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
  "
}
